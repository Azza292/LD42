[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[ext_resource path="res://Textures/displacement.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]

code = "shader_type spatial;
render_mode specular_toon;

uniform vec4 main_color : hint_color;
uniform vec4 intersection_color : hint_color;
uniform float intersection_max_threshold = 0.5;
uniform float intersection_min_threshold = 0.2;
uniform sampler2D displ_tex : hint_white;
uniform float displ_amount = 0.6;
uniform float near = 0.15;
uniform float far = 300.0;
uniform float time_scale = 15.0;

float linearize(float c_depth) {
	c_depth = 2.0 * c_depth - 1.0;
	return near * far / (far + c_depth * (near - far));
}

void fragment()
{
	float zdepth = linearize(texture(DEPTH_TEXTURE, SCREEN_UV).x);
	float zpos = linearize(FRAGCOORD.z);
	float diff = zdepth - zpos;
	
	vec2 displ = texture(displ_tex, UV - TIME / time_scale).rg;
	displ = ((displ * 2.0) - 1.0) * displ_amount;
	diff += displ.x;
	
	vec4 col = mix(intersection_color, main_color, min(step(0.2, diff), step(intersection_max_threshold, diff)));
	ALBEDO = col.rgb;
	
}"

[resource]

render_priority = 0
shader = SubResource( 1 )
shader_param/main_color = Color( 0.470588, 0.85098, 0.94902, 1 )
shader_param/intersection_color = Color( 1, 1, 1, 1 )
shader_param/intersection_max_threshold = 0.5
shader_param/intersection_min_threshold = null
shader_param/displ_amount = 0.25
shader_param/near = 400.0
shader_param/far = 500.0
shader_param/time_scale = 20.0
shader_param/displ_tex = ExtResource( 1 )
_sections_unfolded = [ "shader_param" ]

